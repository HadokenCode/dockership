{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","js/app.js","app.js","js/config.js","js/controller/ContainersCtrl.js","js/controller/DeployTabCtrl.js","js/controller/HeaderCtrl.js","js/controller/LogTabCtrl.js","js/controller/ProjectsCtrl.js","js/factory/Socket.js","js/filter/Unsafe.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","angular","run","$templateCache","put","./config",2,"componentType","component","components","controller","ContainersCtrl","DeployTabCtrl","HeaderCtrl","LogTabCtrl","ProjectsCtrl","filter","unsafe","factory","socket","./controller/ContainersCtrl","./controller/DeployTabCtrl","./controller/HeaderCtrl","./controller/LogTabCtrl","./controller/ProjectsCtrl","./factory/Socket","./filter/Unsafe",3,"$scope","$modalInstance","$http","project","containers","cancel","dismiss",4,"$rootScope","ansi2html","log","current","pendingDeployments","addHandler","result","key","environment","date","slice","undefined","ansii","toHtml",5,"loadUser","get","then","res","user","data","msg",6,"Notification","level","pendingLogs","chageLevel","line","lvl","unshift","body","icon","delay","params","first","strings","forEach","value","this","push","replace","join",7,"dialogs","$modal","processing","open","templateUrl","size","resolve","envStatus","status","total","Environment","DockerEndPoints","running","RunningContainers","revision","LastRevisionLabel","outdated","tmp","Image","split","console","loaded","Status","projects","taskStatus","Name","TaskStatus","loadStatus","openContainers","getContainers","openDeploy","dlg","confirm","btn","doDeploy","getStatus",8,"socketFactory","url","_handlers","name","handler","send","toJson","event","request","setHandler","fromJson",9,"$sce","val","trustAsHtml"],"mappings":"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","file":"app.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","angular.module('dockership', [\n  'ui.bootstrap',\n  'angular-loading-bar',\n  'ansiToHtml',\n  'ngAnimate',\n  'bd.sockjs',\n  'headroom',\n  'dialogs.main',\n  'notification'\n]).run(['$templateCache', function ($templateCache) {\n  $templateCache.put('template/popover/popover.html',\n    '<div class=\"popover {{placement}}\" ng-class=\"{ in: isOpen(), fade: animation() }\">' +\n    '  <div class=\"arrow\"></div>' +\n    '  <div class=\"popover-inner\">' +\n    '      <h3 class=\"popover-title\" ng-bind-html=\"title | unsafe\" ng-show=\"title\"></h3>' +\n    '      <div class=\"popover-content\" ng-bind-html=\"content | unsafe\"></div>' +\n    '  </div>' +\n    '</div>'\n  );\n}]);\n\nrequire('./config');\n",null,"var components = {\n  controller: {\n    ContainersCtrl: require('./controller/ContainersCtrl'),\n    DeployTabCtrl: require('./controller/DeployTabCtrl'),\n    HeaderCtrl: require('./controller/HeaderCtrl'),\n    LogTabCtrl: require('./controller/LogTabCtrl'),\n    ProjectsCtrl: require('./controller/ProjectsCtrl')\n  },\n  filter: {\n    unsafe: require('./filter/Unsafe')\n  },\n  factory: {\n    socket: require('./factory/Socket')\n  }\n};\n\n// bootstrap components\nvar componentType;\nvar component;\nfor (componentType in components) {\n  for (component in components[componentType]) {\n    angular.module('dockership')[componentType](\n      component,\n      components[componentType][component]\n    );\n  }\n}","module.exports = [\n  '$scope', '$modalInstance', '$http', 'project', 'containers',\n  function ($scope, $modalInstance, $http, project, containers) {\n    $scope.project = project;\n    $scope.containers = containers;\n\n    $scope.cancel = function () {\n      $modalInstance.dismiss('cancel');\n    };\n  }\n];","module.exports = [\n  '$scope', '$http', '$rootScope', 'socket', 'ansi2html',\n  function ($scope, $http, $rootScope, socket, ansi2html) {\n    $scope.log = {};\n    $scope.current = 'latest';\n    $rootScope.pendingDeployments = 0;\n\n    socket.addHandler('deploy', function (result) {\n      var key = result.project + ' ' + result.environment + ' '\n        + result.date.slice(0, 16);\n      $scope.current = key;\n\n      if ($scope.log[key] == undefined) {\n        $rootScope.pendingDeployments++;\n        $scope.log[key] = ''\n      }\n      $scope.log[key] += $scope.ansii ? ansi2html.toHtml(result.log) : result.log;\n    });\n  }\n];","module.exports = [\n  '$scope', '$http',\n  function ($scope, $http) {\n    $scope.loadUser = function () {\n      $http.get('/rest/user').then(function (res) {\n        $scope.user = res.data;\n      }, function (msg) {\n        $scope.log(msg.data);\n      });\n    };\n\n    $scope.loadUser()\n  }\n];","module.exports = [\n  '$scope', '$rootScope', 'socket', 'Notification',\n  function ($scope, $rootScope, socket, Notification) {\n    $scope.level = 3;\n    $rootScope.pendingLogs = 0;\n\n    $scope.chageLevel = function (level) {\n      $scope.level = level;\n    };\n\n    $scope.filter = function (line) {\n      return line.lvl <= $scope.level;\n    };\n\n    $scope.log = [];\n    socket.addHandler('log', function (log) {\n      $scope.log.unshift(log);\n      if (log.lvl < 4) {\n        $rootScope.pendingLogs++;\n      }\n\n      if (log.lvl < 1) {\n        var notification = new Notification('[Critical Error]', {\n          body: log.msg,\n          icon: '/logo.png',\n          delay: 4000\n        });\n      }\n    });\n\n    $scope.params = function (params, first) {\n      var strings = [];\n      angular.forEach(params, function (value, key) {\n        if (key != 't' && key != 'msg' && key != 'lvl' && key != 'revision') {\n          this.push('<b>' + key + '</b>: ' + value);\n        }\n\n        if (key == 'revision') {\n          this.push('<b>' + key + '</b>: ' + value.slice(0,12));\n        }\n      }, strings);\n\n      if (first) {\n        return strings[0].replace(/<[^>]+>/gm, '');\n      }\n\n      return strings.join('<br /> ');\n    };\n  }\n];","module.exports = [\n  '$scope', '$http', 'socket', 'dialogs', '$modal',\n  function ($scope, $http, socket, dialogs, $modal) {\n    'use strict';\n    $scope.processing = false;\n\n    socket.addHandler('containers', function (result) {\n      $scope.processing = false;\n      var modalInstance = $modal.open({\n        templateUrl: 'ContainersContent.html',\n        controller: 'ContainersCtrl',\n        size: 'lg',\n        resolve: {\n          project: function () {\n            return '';\n          },\n          containers: function () {\n            return result;\n          }\n        }\n      });\n    });\n\n    var envStatus = function (status) {\n      if (status == undefined) {\n        return ['loading'];\n      }\n\n      var total = status.Environment.DockerEndPoints.length;\n      var running = status.RunningContainers;\n      var revision = status.LastRevisionLabel;\n      var outdated = 0;\n\n      if (running.length == 0) {\n        return ['down']\n      }\n\n      if (running.length != total) {\n        return ['down', 'partial']\n      }\n\n      for (var i = running.length - 1; i >= 0; i--) {\n        var tmp = running[i].Image.split(':');\n        if (tmp.length < 2) {\n            console.log(tmp);\n            continue;\n        }\n\n        if (revision.slice(0, tmp[1].length) != tmp[1]) {\n          outdated++;\n        }\n      };\n\n      if (outdated == total) {\n        return ['outdated']\n      }\n\n      if (outdated != 0) {\n        return ['outdated', 'partial']\n      }\n\n      return ['ok'];\n    };\n\n    socket.addHandler('status', function (result) {\n      $scope.processing = false;\n      $scope.loaded = true;\n\n      angular.forEach(result, function (project, key) {\n        angular.forEach(project.Status, function (status, key) {\n          status.Status = envStatus(status);\n        });\n      });\n\n      $scope.status = result;\n\n    });\n\n    socket.addHandler('projects', function (result) {\n      $scope.projects = result;\n\n      angular.forEach(result, function (project, key) {\n        $scope.taskStatus[project.Name] = project.TaskStatus;\n      });\n\n      $scope.loadStatus();\n    });\n\n    $scope.openContainers = function (project) {\n      $scope.processing = true;\n      socket.getContainers(project);\n    };\n\n    $scope.taskStatus = [];\n    $scope.openDeploy = function (project, environment) {\n      var msg = 'Are you sure want to deploy <b>' + project.Name + '</b> at <b>'\n        + environment.Name + '</b>?'    ;\n      var dlg = dialogs.confirm('Confirm', msg, {size: 'md'});\n      dlg.result.then(function (btn){\n        if ($scope.taskStatus[project.Name][environment.Name] == undefined) {\n          $scope.taskStatus[project.Name][environment.Name] = {};\n        }\n\n        $scope.taskStatus[project.Name][environment.Name]['deploy'] = true;\n        socket.doDeploy(project, environment);\n      });\n    };\n\n\n    $scope.loaded = false;\n    $scope.loadStatus = function () {\n      socket.getStatus();\n    };\n  }\n];\n","module.exports = [\n  'socketFactory',\n  function (socketFactory) {\n    var socket = socketFactory({\n      url: '/socket'\n    });\n\n    socket._handlers = {};\n    socket.addHandler = function (name, handler) {\n      socket._handlers[name] = handler;\n    };\n\n    socket.doDeploy = function (project, environment) {\n      socket.send(angular.toJson({\n        event: 'deploy',\n        request: {\n          project: project.Name,\n          environment: environment.Name\n        }\n      }))\n    };\n\n    socket.getContainers = function (project) {\n      socket.send(angular.toJson({\n        event: 'containers',\n        request: {project: project.Name}\n      }))\n    };\n\n    socket.getStatus = function (project) {\n      socket.send(angular.toJson({\n        event: 'status',\n        request: {}\n      }))\n    };\n\n    socket.setHandler('message', function (e) {\n      data = angular.fromJson(e.data);\n      socket._handlers[data.event](data.result);\n    });\n\n\n    return socket;\n  }\n];","module.exports = [\n  '$sce',\n  function ($sce) {\n    return function (val) {\n      return $sce.trustAsHtml(val);\n    };\n  }\n];"],"sourceRoot":"../src/js"}